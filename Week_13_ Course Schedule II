// https://leetcode.com/problems/course-schedule-ii/

class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int> >& prerequisites)
    {
        vector<int> res;
        if (numCourses == 0)
            return res;

        map<int, set<int>> to_graph, from_graph;
        for (auto vec : prerequisites){
            to_graph[vec[1]].insert(vec[0]);
            from_graph[vec[0]].insert(vec[1]);
        }

        set<int> used;
        while(true){
            bool add = false;
            for (int i = 0; i < numCourses; i++)
            {
                if (from_graph[i].empty() && used.find(i) == used.end()){
                    add = true;
                    used.insert(i);
                    res.push_back(i);
                    for (auto iter = to_graph[i].begin(); iter != to_graph[i].end(); iter++)
                        from_graph[*iter].erase(from_graph[*iter].find(i));
                    break;
                }
            }
            if (!add && res.size() < numCourses) {
                res.clear();
                return res;
            }
            if (res.size() == numCourses) 
                return res;
        }
        return res;
    }
};
